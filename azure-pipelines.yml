# Assumes you have defined the following variables in the azure devops project:
# - BuildConfiguration (default value Release)

#
# variables:
#   BuildConfiguration: Release

name: $(BuildID)
resources:
  - repo: self
    clean: "true"

trigger:
  - master

stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool:
         vmImage: 'ubuntu-latest'
        steps:
          - powershell: |
              [xml] $proj = Get-Item *.csproj | Get-Content -Raw
              $version = $proj.Project.PropertyGroup.Version
              Write-Host ('##vso[build.updatebuildnumber]{0}+{1}' -f $version,  $env:BUILD_BUILDNUMBER); 
            workingDirectory: src/CcAcca.ApplicationInsights.ProblemDetails
            displayName: 'Update BuildNumber'

          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: restore
              projects: src/*.sln
              feedsToUse: config
              nugetConfigPath: src/NuGet.config

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              projects: src/*.sln
              arguments: '--configuration $(BuildConfiguration) --no-restore'

          - task: DotNetCoreCLI@2
            displayName: Unit Test
            inputs:
              command: test
              projects: src/CcAcca.ApplicationInsights.ProblemDetails.Tests/CcAcca.ApplicationInsights.ProblemDetails.Tests.csproj
              arguments: '--configuration $(BuildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: Pack
            inputs:
              command: pack
              packagesToPack: src/CcAcca.ApplicationInsights.ProblemDetails/CcAcca.ApplicationInsights.ProblemDetails.csproj
              nobuild: true
              configuration: '$(BuildConfiguration)'

          - task: NuGetCommand@2
            displayName: Push
            inputs:
              command: push
              nuGetFeedType: external
              publishFeedCredentials: 'nuget-feed'
              allowPackageConflicts: true
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
